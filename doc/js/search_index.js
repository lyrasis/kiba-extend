var search_data = {"index":{"searchIndex":["helpers","kiba","extend","csv","destinations","csv","fieldset","transforms","append","append","nilfields","tofieldvalue","clean","alphabetizefieldvalues","clean","clearfields","delimiteronlyfields","downcasefieldvalues","emptyfieldgroups","helpers","regexpfindreplacefieldvals","stripfields","combinevalues","acrossfieldgroup","combinevalues","fromfieldswithdelimiter","fullrecord","copy","copy","field","cspace","converttoid","cspace","flaginvalidcharacters","normalizeforid","deduplicate","deduplicate","fieldvalues","fields","flag","groupedfieldvalues","delete","delete","emptyfieldvalues","fieldvaluecontainingstring","fieldvalueifequalsotherfield","fieldvaluematchingregexp","fields","fieldsexcept","explode","columnsremappedinnewrows","explode","fieldvaluestonewrows","rowsfrommultivalfield","filterrows","fieldequalto","fieldmatchregexp","fieldpopulated","fieldvaluegreaterthan","filterrows","merge","comparefieldsflag","constantvalue","constantvalueconditional","countofmatchingrows","merge","multirowlookup","multivalueconstant","msaccess","msaccess","scientificnotationtonumberstring","prepend","fieldtofieldvalue","prepend","tofieldvalue","rename","field","rename","replace","emptyfieldvalues","fieldvaluewithstaticmapping","replace","reshape","collapsemultiplefieldstoonetypedfieldpair","reshape","split","intomultiplecolumns","split","utils","lookup","criteriachecker","fieldemptiness","lookup","multivalpairs","pairequality","pairinclusion","rowselector","setchecker","object","add_constant_values()","close()","csv_to_hash()","csv_to_hash()","csv_to_multi_hash()","csv_to_multi_hash()","delim_only?()","execute_job()","fields()","generate_csv()","hash()","job_csv()","join_values()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","populate()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","process()","result()","value_ct()","write()","gemfile","gemfile.lock","license","readme","rakefile","setup","test.csv"],"longSearchIndex":["helpers","kiba","kiba::extend","kiba::extend::csv","kiba::extend::destinations","kiba::extend::destinations::csv","kiba::extend::fieldset","kiba::extend::transforms","kiba::extend::transforms::append","kiba::extend::transforms::append::append","kiba::extend::transforms::append::nilfields","kiba::extend::transforms::append::tofieldvalue","kiba::extend::transforms::clean","kiba::extend::transforms::clean::alphabetizefieldvalues","kiba::extend::transforms::clean::clean","kiba::extend::transforms::clean::clearfields","kiba::extend::transforms::clean::delimiteronlyfields","kiba::extend::transforms::clean::downcasefieldvalues","kiba::extend::transforms::clean::emptyfieldgroups","kiba::extend::transforms::clean::helpers","kiba::extend::transforms::clean::regexpfindreplacefieldvals","kiba::extend::transforms::clean::stripfields","kiba::extend::transforms::combinevalues","kiba::extend::transforms::combinevalues::acrossfieldgroup","kiba::extend::transforms::combinevalues::combinevalues","kiba::extend::transforms::combinevalues::fromfieldswithdelimiter","kiba::extend::transforms::combinevalues::fullrecord","kiba::extend::transforms::copy","kiba::extend::transforms::copy::copy","kiba::extend::transforms::copy::field","kiba::extend::transforms::cspace","kiba::extend::transforms::cspace::converttoid","kiba::extend::transforms::cspace::cspace","kiba::extend::transforms::cspace::flaginvalidcharacters","kiba::extend::transforms::cspace::normalizeforid","kiba::extend::transforms::deduplicate","kiba::extend::transforms::deduplicate::deduplicate","kiba::extend::transforms::deduplicate::fieldvalues","kiba::extend::transforms::deduplicate::fields","kiba::extend::transforms::deduplicate::flag","kiba::extend::transforms::deduplicate::groupedfieldvalues","kiba::extend::transforms::delete","kiba::extend::transforms::delete::delete","kiba::extend::transforms::delete::emptyfieldvalues","kiba::extend::transforms::delete::fieldvaluecontainingstring","kiba::extend::transforms::delete::fieldvalueifequalsotherfield","kiba::extend::transforms::delete::fieldvaluematchingregexp","kiba::extend::transforms::delete::fields","kiba::extend::transforms::delete::fieldsexcept","kiba::extend::transforms::explode","kiba::extend::transforms::explode::columnsremappedinnewrows","kiba::extend::transforms::explode::explode","kiba::extend::transforms::explode::fieldvaluestonewrows","kiba::extend::transforms::explode::rowsfrommultivalfield","kiba::extend::transforms::filterrows","kiba::extend::transforms::filterrows::fieldequalto","kiba::extend::transforms::filterrows::fieldmatchregexp","kiba::extend::transforms::filterrows::fieldpopulated","kiba::extend::transforms::filterrows::fieldvaluegreaterthan","kiba::extend::transforms::filterrows::filterrows","kiba::extend::transforms::merge","kiba::extend::transforms::merge::comparefieldsflag","kiba::extend::transforms::merge::constantvalue","kiba::extend::transforms::merge::constantvalueconditional","kiba::extend::transforms::merge::countofmatchingrows","kiba::extend::transforms::merge::merge","kiba::extend::transforms::merge::multirowlookup","kiba::extend::transforms::merge::multivalueconstant","kiba::extend::transforms::msaccess","kiba::extend::transforms::msaccess::msaccess","kiba::extend::transforms::msaccess::scientificnotationtonumberstring","kiba::extend::transforms::prepend","kiba::extend::transforms::prepend::fieldtofieldvalue","kiba::extend::transforms::prepend::prepend","kiba::extend::transforms::prepend::tofieldvalue","kiba::extend::transforms::rename","kiba::extend::transforms::rename::field","kiba::extend::transforms::rename::rename","kiba::extend::transforms::replace","kiba::extend::transforms::replace::emptyfieldvalues","kiba::extend::transforms::replace::fieldvaluewithstaticmapping","kiba::extend::transforms::replace::replace","kiba::extend::transforms::reshape","kiba::extend::transforms::reshape::collapsemultiplefieldstoonetypedfieldpair","kiba::extend::transforms::reshape::reshape","kiba::extend::transforms::split","kiba::extend::transforms::split::intomultiplecolumns","kiba::extend::transforms::split::split","kiba::extend::utils","kiba::extend::utils::lookup","kiba::extend::utils::lookup::criteriachecker","kiba::extend::utils::lookup::fieldemptiness","kiba::extend::utils::lookup::lookup","kiba::extend::utils::lookup::multivalpairs","kiba::extend::utils::lookup::pairequality","kiba::extend::utils::lookup::pairinclusion","kiba::extend::utils::lookup::rowselector","kiba::extend::utils::lookup::setchecker","object","kiba::extend::fieldset#add_constant_values()","kiba::extend::destinations::csv#close()","kiba::extend::utils::lookup::csv_to_hash()","kiba::extend::utils::lookup::csv_to_hash()","kiba::extend::utils::lookup::csv_to_multi_hash()","kiba::extend::utils::lookup::csv_to_multi_hash()","kiba::extend::transforms::clean::helpers#delim_only?()","helpers#execute_job()","kiba::extend::fieldset#fields()","helpers#generate_csv()","kiba::extend::fieldset#hash()","helpers#job_csv()","kiba::extend::fieldset#join_values()","kiba::extend::destinations::csv::new()","kiba::extend::fieldset::new()","kiba::extend::transforms::append::nilfields::new()","kiba::extend::transforms::append::tofieldvalue::new()","kiba::extend::transforms::clean::alphabetizefieldvalues::new()","kiba::extend::transforms::clean::clearfields::new()","kiba::extend::transforms::clean::delimiteronlyfields::new()","kiba::extend::transforms::clean::downcasefieldvalues::new()","kiba::extend::transforms::clean::emptyfieldgroups::new()","kiba::extend::transforms::clean::regexpfindreplacefieldvals::new()","kiba::extend::transforms::clean::stripfields::new()","kiba::extend::transforms::combinevalues::acrossfieldgroup::new()","kiba::extend::transforms::combinevalues::fromfieldswithdelimiter::new()","kiba::extend::transforms::combinevalues::fullrecord::new()","kiba::extend::transforms::copy::field::new()","kiba::extend::transforms::cspace::converttoid::new()","kiba::extend::transforms::cspace::flaginvalidcharacters::new()","kiba::extend::transforms::cspace::normalizeforid::new()","kiba::extend::transforms::deduplicate::fieldvalues::new()","kiba::extend::transforms::deduplicate::fields::new()","kiba::extend::transforms::deduplicate::flag::new()","kiba::extend::transforms::deduplicate::groupedfieldvalues::new()","kiba::extend::transforms::delete::emptyfieldvalues::new()","kiba::extend::transforms::delete::fieldvaluecontainingstring::new()","kiba::extend::transforms::delete::fieldvalueifequalsotherfield::new()","kiba::extend::transforms::delete::fieldvaluematchingregexp::new()","kiba::extend::transforms::delete::fields::new()","kiba::extend::transforms::delete::fieldsexcept::new()","kiba::extend::transforms::explode::columnsremappedinnewrows::new()","kiba::extend::transforms::explode::fieldvaluestonewrows::new()","kiba::extend::transforms::explode::rowsfrommultivalfield::new()","kiba::extend::transforms::filterrows::fieldequalto::new()","kiba::extend::transforms::filterrows::fieldmatchregexp::new()","kiba::extend::transforms::filterrows::fieldpopulated::new()","kiba::extend::transforms::filterrows::fieldvaluegreaterthan::new()","kiba::extend::transforms::merge::comparefieldsflag::new()","kiba::extend::transforms::merge::constantvalue::new()","kiba::extend::transforms::merge::constantvalueconditional::new()","kiba::extend::transforms::merge::countofmatchingrows::new()","kiba::extend::transforms::merge::multirowlookup::new()","kiba::extend::transforms::merge::multivalueconstant::new()","kiba::extend::transforms::msaccess::scientificnotationtonumberstring::new()","kiba::extend::transforms::prepend::fieldtofieldvalue::new()","kiba::extend::transforms::prepend::tofieldvalue::new()","kiba::extend::transforms::rename::field::new()","kiba::extend::transforms::replace::emptyfieldvalues::new()","kiba::extend::transforms::replace::fieldvaluewithstaticmapping::new()","kiba::extend::transforms::reshape::collapsemultiplefieldstoonetypedfieldpair::new()","kiba::extend::transforms::split::intomultiplecolumns::new()","kiba::extend::utils::lookup::criteriachecker::new()","kiba::extend::utils::lookup::fieldemptiness::new()","kiba::extend::utils::lookup::multivalpairs::new()","kiba::extend::utils::lookup::pairequality::new()","kiba::extend::utils::lookup::pairinclusion::new()","kiba::extend::utils::lookup::rowselector::new()","kiba::extend::utils::lookup::setchecker::new()","kiba::extend::fieldset#populate()","kiba::extend::transforms::append::nilfields#process()","kiba::extend::transforms::append::tofieldvalue#process()","kiba::extend::transforms::clean::alphabetizefieldvalues#process()","kiba::extend::transforms::clean::clearfields#process()","kiba::extend::transforms::clean::delimiteronlyfields#process()","kiba::extend::transforms::clean::downcasefieldvalues#process()","kiba::extend::transforms::clean::emptyfieldgroups#process()","kiba::extend::transforms::clean::regexpfindreplacefieldvals#process()","kiba::extend::transforms::clean::stripfields#process()","kiba::extend::transforms::combinevalues::acrossfieldgroup#process()","kiba::extend::transforms::combinevalues::fromfieldswithdelimiter#process()","kiba::extend::transforms::combinevalues::fullrecord#process()","kiba::extend::transforms::copy::field#process()","kiba::extend::transforms::cspace::converttoid#process()","kiba::extend::transforms::cspace::flaginvalidcharacters#process()","kiba::extend::transforms::cspace::normalizeforid#process()","kiba::extend::transforms::deduplicate::fieldvalues#process()","kiba::extend::transforms::deduplicate::fields#process()","kiba::extend::transforms::deduplicate::flag#process()","kiba::extend::transforms::deduplicate::groupedfieldvalues#process()","kiba::extend::transforms::delete::emptyfieldvalues#process()","kiba::extend::transforms::delete::fieldvaluecontainingstring#process()","kiba::extend::transforms::delete::fieldvalueifequalsotherfield#process()","kiba::extend::transforms::delete::fieldvaluematchingregexp#process()","kiba::extend::transforms::delete::fields#process()","kiba::extend::transforms::delete::fieldsexcept#process()","kiba::extend::transforms::explode::columnsremappedinnewrows#process()","kiba::extend::transforms::explode::fieldvaluestonewrows#process()","kiba::extend::transforms::explode::rowsfrommultivalfield#process()","kiba::extend::transforms::filterrows::fieldequalto#process()","kiba::extend::transforms::filterrows::fieldmatchregexp#process()","kiba::extend::transforms::filterrows::fieldpopulated#process()","kiba::extend::transforms::filterrows::fieldvaluegreaterthan#process()","kiba::extend::transforms::merge::comparefieldsflag#process()","kiba::extend::transforms::merge::constantvalue#process()","kiba::extend::transforms::merge::constantvalueconditional#process()","kiba::extend::transforms::merge::countofmatchingrows#process()","kiba::extend::transforms::merge::multirowlookup#process()","kiba::extend::transforms::merge::multivalueconstant#process()","kiba::extend::transforms::msaccess::scientificnotationtonumberstring#process()","kiba::extend::transforms::prepend::fieldtofieldvalue#process()","kiba::extend::transforms::prepend::tofieldvalue#process()","kiba::extend::transforms::rename::field#process()","kiba::extend::transforms::replace::emptyfieldvalues#process()","kiba::extend::transforms::replace::fieldvaluewithstaticmapping#process()","kiba::extend::transforms::reshape::collapsemultiplefieldstoonetypedfieldpair#process()","kiba::extend::transforms::split::intomultiplecolumns#process()","kiba::extend::utils::lookup::rowselector#result()","kiba::extend::fieldset#value_ct()","kiba::extend::destinations::csv#write()","","","","","","",""],"info":[["Helpers","","Helpers.html","",""],["Kiba","","Kiba.html","",""],["Kiba::Extend","","Kiba/Extend.html","",""],["Kiba::Extend::CSV","","Kiba/Extend/CSV.html","",""],["Kiba::Extend::Destinations","","Kiba/Extend/Destinations.html","",""],["Kiba::Extend::Destinations::CSV","","Kiba/Extend/Destinations/CSV.html","",""],["Kiba::Extend::Fieldset","","Kiba/Extend/Fieldset.html","",""],["Kiba::Extend::Transforms","","Kiba/Extend/Transforms.html","",""],["Kiba::Extend::Transforms::Append","","Kiba/Extend/Transforms/Append.html","",""],["Kiba::Extend::Transforms::Append::Append","","Kiba/Extend/Transforms/Append.html","",""],["Kiba::Extend::Transforms::Append::NilFields","","Kiba/Extend/Transforms/Append/NilFields.html","",""],["Kiba::Extend::Transforms::Append::ToFieldValue","","Kiba/Extend/Transforms/Append/ToFieldValue.html","",""],["Kiba::Extend::Transforms::Clean","","Kiba/Extend/Transforms/Clean.html","",""],["Kiba::Extend::Transforms::Clean::AlphabetizeFieldValues","","Kiba/Extend/Transforms/Clean/AlphabetizeFieldValues.html","",""],["Kiba::Extend::Transforms::Clean::Clean","","Kiba/Extend/Transforms/Clean.html","",""],["Kiba::Extend::Transforms::Clean::ClearFields","","Kiba/Extend/Transforms/Clean/ClearFields.html","",""],["Kiba::Extend::Transforms::Clean::DelimiterOnlyFields","","Kiba/Extend/Transforms/Clean/DelimiterOnlyFields.html","",""],["Kiba::Extend::Transforms::Clean::DowncaseFieldValues","","Kiba/Extend/Transforms/Clean/DowncaseFieldValues.html","",""],["Kiba::Extend::Transforms::Clean::EmptyFieldGroups","","Kiba/Extend/Transforms/Clean/EmptyFieldGroups.html","",""],["Kiba::Extend::Transforms::Clean::Helpers","","Kiba/Extend/Transforms/Clean/Helpers.html","",""],["Kiba::Extend::Transforms::Clean::RegexpFindReplaceFieldVals","","Kiba/Extend/Transforms/Clean/RegexpFindReplaceFieldVals.html","",""],["Kiba::Extend::Transforms::Clean::StripFields","","Kiba/Extend/Transforms/Clean/StripFields.html","",""],["Kiba::Extend::Transforms::CombineValues","","Kiba/Extend/Transforms/CombineValues.html","",""],["Kiba::Extend::Transforms::CombineValues::AcrossFieldGroup","","Kiba/Extend/Transforms/CombineValues/AcrossFieldGroup.html","",""],["Kiba::Extend::Transforms::CombineValues::CombineValues","","Kiba/Extend/Transforms/CombineValues.html","",""],["Kiba::Extend::Transforms::CombineValues::FromFieldsWithDelimiter","","Kiba/Extend/Transforms/CombineValues/FromFieldsWithDelimiter.html","",""],["Kiba::Extend::Transforms::CombineValues::FullRecord","","Kiba/Extend/Transforms/CombineValues/FullRecord.html","",""],["Kiba::Extend::Transforms::Copy","","Kiba/Extend/Transforms/Copy.html","",""],["Kiba::Extend::Transforms::Copy::Copy","","Kiba/Extend/Transforms/Copy.html","",""],["Kiba::Extend::Transforms::Copy::Field","","Kiba/Extend/Transforms/Copy/Field.html","",""],["Kiba::Extend::Transforms::Cspace","","Kiba/Extend/Transforms/Cspace.html","",""],["Kiba::Extend::Transforms::Cspace::ConvertToID","","Kiba/Extend/Transforms/Cspace/ConvertToID.html","",""],["Kiba::Extend::Transforms::Cspace::Cspace","","Kiba/Extend/Transforms/Cspace.html","",""],["Kiba::Extend::Transforms::Cspace::FlagInvalidCharacters","","Kiba/Extend/Transforms/Cspace/FlagInvalidCharacters.html","",""],["Kiba::Extend::Transforms::Cspace::NormalizeForID","","Kiba/Extend/Transforms/Cspace/NormalizeForID.html","",""],["Kiba::Extend::Transforms::Deduplicate","","Kiba/Extend/Transforms/Deduplicate.html","",""],["Kiba::Extend::Transforms::Deduplicate::Deduplicate","","Kiba/Extend/Transforms/Deduplicate.html","",""],["Kiba::Extend::Transforms::Deduplicate::FieldValues","","Kiba/Extend/Transforms/Deduplicate/FieldValues.html","",""],["Kiba::Extend::Transforms::Deduplicate::Fields","","Kiba/Extend/Transforms/Deduplicate/Fields.html","",""],["Kiba::Extend::Transforms::Deduplicate::Flag","","Kiba/Extend/Transforms/Deduplicate/Flag.html","",""],["Kiba::Extend::Transforms::Deduplicate::GroupedFieldValues","","Kiba/Extend/Transforms/Deduplicate/GroupedFieldValues.html","",""],["Kiba::Extend::Transforms::Delete","","Kiba/Extend/Transforms/Delete.html","",""],["Kiba::Extend::Transforms::Delete::Delete","","Kiba/Extend/Transforms/Delete.html","",""],["Kiba::Extend::Transforms::Delete::EmptyFieldValues","","Kiba/Extend/Transforms/Delete/EmptyFieldValues.html","",""],["Kiba::Extend::Transforms::Delete::FieldValueContainingString","","Kiba/Extend/Transforms/Delete/FieldValueContainingString.html","",""],["Kiba::Extend::Transforms::Delete::FieldValueIfEqualsOtherField","","Kiba/Extend/Transforms/Delete/FieldValueIfEqualsOtherField.html","",""],["Kiba::Extend::Transforms::Delete::FieldValueMatchingRegexp","","Kiba/Extend/Transforms/Delete/FieldValueMatchingRegexp.html","",""],["Kiba::Extend::Transforms::Delete::Fields","","Kiba/Extend/Transforms/Delete/Fields.html","",""],["Kiba::Extend::Transforms::Delete::FieldsExcept","","Kiba/Extend/Transforms/Delete/FieldsExcept.html","",""],["Kiba::Extend::Transforms::Explode","","Kiba/Extend/Transforms/Explode.html","",""],["Kiba::Extend::Transforms::Explode::ColumnsRemappedInNewRows","","Kiba/Extend/Transforms/Explode/ColumnsRemappedInNewRows.html","","<p>Given a row like: | :id | :r1 | :r2     | :ra | :rb | :xq | | 001 | a;b | foo;bar | aa  | bb  | eee | …\n"],["Kiba::Extend::Transforms::Explode::Explode","","Kiba/Extend/Transforms/Explode.html","",""],["Kiba::Extend::Transforms::Explode::FieldValuesToNewRows","","Kiba/Extend/Transforms/Explode/FieldValuesToNewRows.html","",""],["Kiba::Extend::Transforms::Explode::RowsFromMultivalField","","Kiba/Extend/Transforms/Explode/RowsFromMultivalField.html","","<p>Given a row like: | :id | :r1 | :r2     | | 001 | a;b | foo;bar | And told to split on :r1 with delimiter …\n"],["Kiba::Extend::Transforms::FilterRows","","Kiba/Extend/Transforms/FilterRows.html","",""],["Kiba::Extend::Transforms::FilterRows::FieldEqualTo","","Kiba/Extend/Transforms/FilterRows/FieldEqualTo.html","",""],["Kiba::Extend::Transforms::FilterRows::FieldMatchRegexp","","Kiba/Extend/Transforms/FilterRows/FieldMatchRegexp.html","","<p>matches across the entire literal content of a field. i.e. does not split into multivalues before matching …\n"],["Kiba::Extend::Transforms::FilterRows::FieldPopulated","","Kiba/Extend/Transforms/FilterRows/FieldPopulated.html","",""],["Kiba::Extend::Transforms::FilterRows::FieldValueGreaterThan","","Kiba/Extend/Transforms/FilterRows/FieldValueGreaterThan.html","",""],["Kiba::Extend::Transforms::FilterRows::FilterRows","","Kiba/Extend/Transforms/FilterRows.html","",""],["Kiba::Extend::Transforms::Merge","","Kiba/Extend/Transforms/Merge.html","",""],["Kiba::Extend::Transforms::Merge::CompareFieldsFlag","","Kiba/Extend/Transforms/Merge/CompareFieldsFlag.html","",""],["Kiba::Extend::Transforms::Merge::ConstantValue","","Kiba/Extend/Transforms/Merge/ConstantValue.html","",""],["Kiba::Extend::Transforms::Merge::ConstantValueConditional","","Kiba/Extend/Transforms/Merge/ConstantValueConditional.html","","<p>How the conditions are applied\n\n<pre class=\"ruby\"><span class=\"ruby-value\">:fields_empty</span>\n  <span class=\"ruby-constant\">ALL</span> <span class=\"ruby-identifier\">fields</span> <span class=\"ruby-identifier\">listed</span> <span class=\"ruby-identifier\">must</span> <span class=\"ruby-identifier\">be</span> <span class=\"ruby-keyword\">nil</span> <span class=\"ruby-keyword\">or</span> <span class=\"ruby-identifier\">empty</span>\n<span class=\"ruby-value\">:fields_populated</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["Kiba::Extend::Transforms::Merge::CountOfMatchingRows","","Kiba/Extend/Transforms/Merge/CountOfMatchingRows.html","",""],["Kiba::Extend::Transforms::Merge::Merge","","Kiba/Extend/Transforms/Merge.html","",""],["Kiba::Extend::Transforms::Merge::MultiRowLookup","","Kiba/Extend/Transforms/Merge/MultiRowLookup.html","","<p>used when lookup may return an array of rows from which values should be merged\n\n<pre>into the target, AND THE ...</pre>\n"],["Kiba::Extend::Transforms::Merge::MultivalueConstant","","Kiba/Extend/Transforms/Merge/MultivalueConstant.html","",""],["Kiba::Extend::Transforms::MsAccess","","Kiba/Extend/Transforms/MsAccess.html","",""],["Kiba::Extend::Transforms::MsAccess::MsAccess","","Kiba/Extend/Transforms/MsAccess.html","",""],["Kiba::Extend::Transforms::MsAccess::ScientificNotationToNumberString","","Kiba/Extend/Transforms/MsAccess/ScientificNotationToNumberString.html","",""],["Kiba::Extend::Transforms::Prepend","","Kiba/Extend/Transforms/Prepend.html","",""],["Kiba::Extend::Transforms::Prepend::FieldToFieldValue","","Kiba/Extend/Transforms/Prepend/FieldToFieldValue.html","","<p>Adds the value of prepended_field to the beginning of the  value(s) of the target_field\n<p>@param target_field …\n"],["Kiba::Extend::Transforms::Prepend::Prepend","","Kiba/Extend/Transforms/Prepend.html","",""],["Kiba::Extend::Transforms::Prepend::ToFieldValue","","Kiba/Extend/Transforms/Prepend/ToFieldValue.html","","<p>Adds the specified value to the specified field\n"],["Kiba::Extend::Transforms::Rename","","Kiba/Extend/Transforms/Rename.html","",""],["Kiba::Extend::Transforms::Rename::Field","","Kiba/Extend/Transforms/Rename/Field.html","",""],["Kiba::Extend::Transforms::Rename::Rename","","Kiba/Extend/Transforms/Rename.html","",""],["Kiba::Extend::Transforms::Replace","","Kiba/Extend/Transforms/Replace.html","",""],["Kiba::Extend::Transforms::Replace::EmptyFieldValues","","Kiba/Extend/Transforms/Replace/EmptyFieldValues.html","",""],["Kiba::Extend::Transforms::Replace::FieldValueWithStaticMapping","","Kiba/Extend/Transforms/Replace/FieldValueWithStaticMapping.html","",""],["Kiba::Extend::Transforms::Replace::Replace","","Kiba/Extend/Transforms/Replace.html","",""],["Kiba::Extend::Transforms::Reshape","","Kiba/Extend/Transforms/Reshape.html","",""],["Kiba::Extend::Transforms::Reshape::CollapseMultipleFieldsToOneTypedFieldPair","","Kiba/Extend/Transforms/Reshape/CollapseMultipleFieldsToOneTypedFieldPair.html","","<p>sourcefieldmap = hash where key is source field and value is the type to\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">be</span> <span class=\"ruby-identifier\">assigned</span>\n</pre>\n<p>datafield = target …\n"],["Kiba::Extend::Transforms::Reshape::Reshape","","Kiba/Extend/Transforms/Reshape.html","",""],["Kiba::Extend::Transforms::Split","","Kiba/Extend/Transforms/Split.html","",""],["Kiba::Extend::Transforms::Split::IntoMultipleColumns","","Kiba/Extend/Transforms/Split/IntoMultipleColumns.html","","<p>Splits field into multiple fields, based on sep New columns will use original field name, and add number …\n"],["Kiba::Extend::Transforms::Split::Split","","Kiba/Extend/Transforms/Split.html","",""],["Kiba::Extend::Utils","","Kiba/Extend/Utils.html","",""],["Kiba::Extend::Utils::Lookup","","Kiba/Extend/Utils/Lookup.html","",""],["Kiba::Extend::Utils::Lookup::CriteriaChecker","","Kiba/Extend/Utils/Lookup/CriteriaChecker.html","",""],["Kiba::Extend::Utils::Lookup::FieldEmptiness","","Kiba/Extend/Utils/Lookup/FieldEmptiness.html","",""],["Kiba::Extend::Utils::Lookup::Lookup","","Kiba/Extend/Utils/Lookup.html","",""],["Kiba::Extend::Utils::Lookup::MultivalPairs","","Kiba/Extend/Utils/Lookup/MultivalPairs.html","",""],["Kiba::Extend::Utils::Lookup::PairEquality","","Kiba/Extend/Utils/Lookup/PairEquality.html","",""],["Kiba::Extend::Utils::Lookup::PairInclusion","","Kiba/Extend/Utils/Lookup/PairInclusion.html","",""],["Kiba::Extend::Utils::Lookup::RowSelector","","Kiba/Extend/Utils/Lookup/RowSelector.html","","<p>:field_equal is an array of 2-element arrays to be compared. The whole value of the first field/string …\n"],["Kiba::Extend::Utils::Lookup::SetChecker","","Kiba/Extend/Utils/Lookup/SetChecker.html","",""],["Object","","Object.html","",""],["add_constant_values","Kiba::Extend::Fieldset","Kiba/Extend/Fieldset.html#method-i-add_constant_values","(field, value)",""],["close","Kiba::Extend::Destinations::CSV","Kiba/Extend/Destinations/CSV.html#method-i-close","()",""],["csv_to_hash","Kiba::Extend::Utils::Lookup","Kiba/Extend/Utils/Lookup.html#method-c-csv_to_hash","(file:, csvopt: {}, keycolumn:)","<p>use when keycolumn values are unique creates hash with keycolumn value as key and csv-row-as-hash as …\n"],["csv_to_hash","Kiba::Extend::Utils::Lookup","Kiba/Extend/Utils/Lookup.html#method-c-csv_to_hash","(file:, csvopt: {}, keycolumn:)","<p>use when keycolumn values are unique creates hash with keycolumn value as key and csv-row-as-hash as …\n"],["csv_to_multi_hash","Kiba::Extend::Utils::Lookup","Kiba/Extend/Utils/Lookup.html#method-c-csv_to_multi_hash","(file:, csvopt: {}, keycolumn:)","<p>use when keycolumn values are not unique creates hash with keycolumn value as key and array of csv-rows-as-hashes …\n"],["csv_to_multi_hash","Kiba::Extend::Utils::Lookup","Kiba/Extend/Utils/Lookup.html#method-c-csv_to_multi_hash","(file:, csvopt: {}, keycolumn:)","<p>use when keycolumn values are not unique creates hash with keycolumn value as key and array of csv-rows-as-hashes …\n"],["delim_only?","Kiba::Extend::Transforms::Clean::Helpers","Kiba/Extend/Transforms/Clean/Helpers.html#method-i-delim_only-3F","(val, delim, usenull = false)",""],["execute_job","Helpers","Helpers.html#method-i-execute_job","(filename:, csvopt: {} , xform:, xformopt: {})",""],["fields","Kiba::Extend::Fieldset","Kiba/Extend/Fieldset.html#method-i-fields","()",""],["generate_csv","Helpers","Helpers.html#method-i-generate_csv","(path, rows)",""],["hash","Kiba::Extend::Fieldset","Kiba/Extend/Fieldset.html#method-i-hash","()",""],["job_csv","Helpers","Helpers.html#method-i-job_csv","(filename:, incsvopt: {}, outcsvopt: {})",""],["join_values","Kiba::Extend::Fieldset","Kiba/Extend/Fieldset.html#method-i-join_values","(delim)",""],["new","Kiba::Extend::Destinations::CSV","Kiba/Extend/Destinations/CSV.html#method-c-new","(filename:, csv_options: nil, headers: nil, initial_headers: [])",""],["new","Kiba::Extend::Fieldset","Kiba/Extend/Fieldset.html#method-c-new","(fields)",""],["new","Kiba::Extend::Transforms::Append::NilFields","Kiba/Extend/Transforms/Append/NilFields.html#method-c-new","(fields:)",""],["new","Kiba::Extend::Transforms::Append::ToFieldValue","Kiba/Extend/Transforms/Append/ToFieldValue.html#method-c-new","(field:, value:)",""],["new","Kiba::Extend::Transforms::Clean::AlphabetizeFieldValues","Kiba/Extend/Transforms/Clean/AlphabetizeFieldValues.html#method-c-new","(fields:, delim:)",""],["new","Kiba::Extend::Transforms::Clean::ClearFields","Kiba/Extend/Transforms/Clean/ClearFields.html#method-c-new","(fields:, if_equals: nil)",""],["new","Kiba::Extend::Transforms::Clean::DelimiterOnlyFields","Kiba/Extend/Transforms/Clean/DelimiterOnlyFields.html#method-c-new","(delim:, use_nullvalue: false)",""],["new","Kiba::Extend::Transforms::Clean::DowncaseFieldValues","Kiba/Extend/Transforms/Clean/DowncaseFieldValues.html#method-c-new","(fields:)",""],["new","Kiba::Extend::Transforms::Clean::EmptyFieldGroups","Kiba/Extend/Transforms/Clean/EmptyFieldGroups.html#method-c-new","(groups:, sep:, use_nullvalue: false)","<p>groups is an array of arrays. Each of the arrays inside groups should list all fields that are part\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">of</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["new","Kiba::Extend::Transforms::Clean::RegexpFindReplaceFieldVals","Kiba/Extend/Transforms/Clean/RegexpFindReplaceFieldVals.html#method-c-new","(fields:, find:, replace:, casesensitive: true, multival: false, sep: nil, debug: false)",""],["new","Kiba::Extend::Transforms::Clean::StripFields","Kiba/Extend/Transforms/Clean/StripFields.html#method-c-new","(fields:)",""],["new","Kiba::Extend::Transforms::CombineValues::AcrossFieldGroup","Kiba/Extend/Transforms/CombineValues/AcrossFieldGroup.html#method-c-new","(fieldmap:, sep:, delete_sources: true)",""],["new","Kiba::Extend::Transforms::CombineValues::FromFieldsWithDelimiter","Kiba/Extend/Transforms/CombineValues/FromFieldsWithDelimiter.html#method-c-new","(sources:, target:, sep:, prepend_source_field_name: false, delete_sources: true)",""],["new","Kiba::Extend::Transforms::CombineValues::FullRecord","Kiba/Extend/Transforms/CombineValues/FullRecord.html#method-c-new","(target:, sep: ' ')",""],["new","Kiba::Extend::Transforms::Copy::Field","Kiba/Extend/Transforms/Copy/Field.html#method-c-new","(from:, to:)",""],["new","Kiba::Extend::Transforms::Cspace::ConvertToID","Kiba/Extend/Transforms/Cspace/ConvertToID.html#method-c-new","(source:, target:)",""],["new","Kiba::Extend::Transforms::Cspace::FlagInvalidCharacters","Kiba/Extend/Transforms/Cspace/FlagInvalidCharacters.html#method-c-new","(check:, flag:)",""],["new","Kiba::Extend::Transforms::Cspace::NormalizeForID","Kiba/Extend/Transforms/Cspace/NormalizeForID.html#method-c-new","(source:, target:)",""],["new","Kiba::Extend::Transforms::Deduplicate::FieldValues","Kiba/Extend/Transforms/Deduplicate/FieldValues.html#method-c-new","(fields:, sep:)",""],["new","Kiba::Extend::Transforms::Deduplicate::Fields","Kiba/Extend/Transforms/Deduplicate/Fields.html#method-c-new","(source:, targets:, casesensitive: true, multival: false, sep: DELIM)",""],["new","Kiba::Extend::Transforms::Deduplicate::Flag","Kiba/Extend/Transforms/Deduplicate/Flag.html#method-c-new","(on_field:, in_field:, using:)",""],["new","Kiba::Extend::Transforms::Deduplicate::GroupedFieldValues","Kiba/Extend/Transforms/Deduplicate/GroupedFieldValues.html#method-c-new","(on_field:, grouped_fields: [], sep:)",""],["new","Kiba::Extend::Transforms::Delete::EmptyFieldValues","Kiba/Extend/Transforms/Delete/EmptyFieldValues.html#method-c-new","(fields:, sep:)",""],["new","Kiba::Extend::Transforms::Delete::FieldValueContainingString","Kiba/Extend/Transforms/Delete/FieldValueContainingString.html#method-c-new","(fields:, match:, casesensitive: true)",""],["new","Kiba::Extend::Transforms::Delete::FieldValueIfEqualsOtherField","Kiba/Extend/Transforms/Delete/FieldValueIfEqualsOtherField.html#method-c-new","(delete:, if_equal_to:, multival: false, sep: nil, grouped_fields: [], case_sensitive: true)",""],["new","Kiba::Extend::Transforms::Delete::FieldValueMatchingRegexp","Kiba/Extend/Transforms/Delete/FieldValueMatchingRegexp.html#method-c-new","(fields:, match:, casesensitive: true)",""],["new","Kiba::Extend::Transforms::Delete::Fields","Kiba/Extend/Transforms/Delete/Fields.html#method-c-new","(fields:)",""],["new","Kiba::Extend::Transforms::Delete::FieldsExcept","Kiba/Extend/Transforms/Delete/FieldsExcept.html#method-c-new","(keepfields:)",""],["new","Kiba::Extend::Transforms::Explode::ColumnsRemappedInNewRows","Kiba/Extend/Transforms/Explode/ColumnsRemappedInNewRows.html#method-c-new","(remap_groups:, map_to:)",""],["new","Kiba::Extend::Transforms::Explode::FieldValuesToNewRows","Kiba/Extend/Transforms/Explode/FieldValuesToNewRows.html#method-c-new","(fields: [], target:, multival: false, sep: ' ', keep_nil: false, keep_empty: false)",""],["new","Kiba::Extend::Transforms::Explode::RowsFromMultivalField","Kiba/Extend/Transforms/Explode/RowsFromMultivalField.html#method-c-new","(field:, delim:)",""],["new","Kiba::Extend::Transforms::FilterRows::FieldEqualTo","Kiba/Extend/Transforms/FilterRows/FieldEqualTo.html#method-c-new","(action:, field:, value:)",""],["new","Kiba::Extend::Transforms::FilterRows::FieldMatchRegexp","Kiba/Extend/Transforms/FilterRows/FieldMatchRegexp.html#method-c-new","(action:, field:, match:)",""],["new","Kiba::Extend::Transforms::FilterRows::FieldPopulated","Kiba/Extend/Transforms/FilterRows/FieldPopulated.html#method-c-new","(action:, field:)",""],["new","Kiba::Extend::Transforms::FilterRows::FieldValueGreaterThan","Kiba/Extend/Transforms/FilterRows/FieldValueGreaterThan.html#method-c-new","(action:, field:, value:)",""],["new","Kiba::Extend::Transforms::Merge::CompareFieldsFlag","Kiba/Extend/Transforms/Merge/CompareFieldsFlag.html#method-c-new","(fields:, target:, downcase: true, strip: true, ignore_blank: false)",""],["new","Kiba::Extend::Transforms::Merge::ConstantValue","Kiba/Extend/Transforms/Merge/ConstantValue.html#method-c-new","(target:, value:)",""],["new","Kiba::Extend::Transforms::Merge::ConstantValueConditional","Kiba/Extend/Transforms/Merge/ConstantValueConditional.html#method-c-new","(fieldmap:, conditions: {}, sep: nil)",""],["new","Kiba::Extend::Transforms::Merge::CountOfMatchingRows","Kiba/Extend/Transforms/Merge/CountOfMatchingRows.html#method-c-new","(lookup:, keycolumn:, targetfield:, conditions: {} )",""],["new","Kiba::Extend::Transforms::Merge::MultiRowLookup","Kiba/Extend/Transforms/Merge/MultiRowLookup.html#method-c-new","(fieldmap:, constantmap: {}, lookup:, keycolumn:, conditions: {}, multikey: false, delim: DELIM)",""],["new","Kiba::Extend::Transforms::Merge::MultivalueConstant","Kiba/Extend/Transforms/Merge/MultivalueConstant.html#method-c-new","(on_field:, target:, value:, sep:, placeholder:)",""],["new","Kiba::Extend::Transforms::MsAccess::ScientificNotationToNumberString","Kiba/Extend/Transforms/MsAccess/ScientificNotationToNumberString.html#method-c-new","(fields:)",""],["new","Kiba::Extend::Transforms::Prepend::FieldToFieldValue","Kiba/Extend/Transforms/Prepend/FieldToFieldValue.html#method-c-new","(target_field:, prepended_field:, sep: '', delete_prepended: false, mvdelim: '')",""],["new","Kiba::Extend::Transforms::Prepend::ToFieldValue","Kiba/Extend/Transforms/Prepend/ToFieldValue.html#method-c-new","(field:, value:, mvdelim: '')",""],["new","Kiba::Extend::Transforms::Rename::Field","Kiba/Extend/Transforms/Rename/Field.html#method-c-new","(from:, to:)",""],["new","Kiba::Extend::Transforms::Replace::EmptyFieldValues","Kiba/Extend/Transforms/Replace/EmptyFieldValues.html#method-c-new","(fields:, value:)",""],["new","Kiba::Extend::Transforms::Replace::FieldValueWithStaticMapping","Kiba/Extend/Transforms/Replace/FieldValueWithStaticMapping.html#method-c-new","(source:, target:, mapping:, fallback_val: :orig, delete_source: true, multival: false, sep: '')",""],["new","Kiba::Extend::Transforms::Reshape::CollapseMultipleFieldsToOneTypedFieldPair","Kiba/Extend/Transforms/Reshape/CollapseMultipleFieldsToOneTypedFieldPair.html#method-c-new","(sourcefieldmap:, datafield:, typefield:, sourcesep: nil, targetsep:, delete_sources: true)",""],["new","Kiba::Extend::Transforms::Split::IntoMultipleColumns","Kiba/Extend/Transforms/Split/IntoMultipleColumns.html#method-c-new","(field:, sep:, delete_source: true, max_segments: 9999, collapse_on: :right, warnfield: nil)",""],["new","Kiba::Extend::Utils::Lookup::CriteriaChecker","Kiba/Extend/Utils/Lookup/CriteriaChecker.html#method-c-new","(check_type:, config:, row:, mergerow: {}, sep: nil)",""],["new","Kiba::Extend::Utils::Lookup::FieldEmptiness","Kiba/Extend/Utils/Lookup/FieldEmptiness.html#method-c-new","(field:, row:, mergerow:)",""],["new","Kiba::Extend::Utils::Lookup::MultivalPairs","Kiba/Extend/Utils/Lookup/MultivalPairs.html#method-c-new","(pair:, row:, mergerow: {}, sep:)",""],["new","Kiba::Extend::Utils::Lookup::PairEquality","Kiba/Extend/Utils/Lookup/PairEquality.html#method-c-new","(pair:, row:, mergerow: {})",""],["new","Kiba::Extend::Utils::Lookup::PairInclusion","Kiba/Extend/Utils/Lookup/PairInclusion.html#method-c-new","(pair:, row:, mergerow: {})",""],["new","Kiba::Extend::Utils::Lookup::RowSelector","Kiba/Extend/Utils/Lookup/RowSelector.html#method-c-new","(origrow:, mergerows: [], conditions: {}, sep: nil)",""],["new","Kiba::Extend::Utils::Lookup::SetChecker","Kiba/Extend/Utils/Lookup/SetChecker.html#method-c-new","(check_type:, set:, row:, mergerow: {}, sep: nil)",""],["populate","Kiba::Extend::Fieldset","Kiba/Extend/Fieldset.html#method-i-populate","(rows)",""],["process","Kiba::Extend::Transforms::Append::NilFields","Kiba/Extend/Transforms/Append/NilFields.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Append::ToFieldValue","Kiba/Extend/Transforms/Append/ToFieldValue.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Clean::AlphabetizeFieldValues","Kiba/Extend/Transforms/Clean/AlphabetizeFieldValues.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Clean::ClearFields","Kiba/Extend/Transforms/Clean/ClearFields.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Clean::DelimiterOnlyFields","Kiba/Extend/Transforms/Clean/DelimiterOnlyFields.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Clean::DowncaseFieldValues","Kiba/Extend/Transforms/Clean/DowncaseFieldValues.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Clean::EmptyFieldGroups","Kiba/Extend/Transforms/Clean/EmptyFieldGroups.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Clean::RegexpFindReplaceFieldVals","Kiba/Extend/Transforms/Clean/RegexpFindReplaceFieldVals.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Clean::StripFields","Kiba/Extend/Transforms/Clean/StripFields.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::CombineValues::AcrossFieldGroup","Kiba/Extend/Transforms/CombineValues/AcrossFieldGroup.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::CombineValues::FromFieldsWithDelimiter","Kiba/Extend/Transforms/CombineValues/FromFieldsWithDelimiter.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::CombineValues::FullRecord","Kiba/Extend/Transforms/CombineValues/FullRecord.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Copy::Field","Kiba/Extend/Transforms/Copy/Field.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Cspace::ConvertToID","Kiba/Extend/Transforms/Cspace/ConvertToID.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Cspace::FlagInvalidCharacters","Kiba/Extend/Transforms/Cspace/FlagInvalidCharacters.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Cspace::NormalizeForID","Kiba/Extend/Transforms/Cspace/NormalizeForID.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Deduplicate::FieldValues","Kiba/Extend/Transforms/Deduplicate/FieldValues.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Deduplicate::Fields","Kiba/Extend/Transforms/Deduplicate/Fields.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Deduplicate::Flag","Kiba/Extend/Transforms/Deduplicate/Flag.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Deduplicate::GroupedFieldValues","Kiba/Extend/Transforms/Deduplicate/GroupedFieldValues.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Delete::EmptyFieldValues","Kiba/Extend/Transforms/Delete/EmptyFieldValues.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Delete::FieldValueContainingString","Kiba/Extend/Transforms/Delete/FieldValueContainingString.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Delete::FieldValueIfEqualsOtherField","Kiba/Extend/Transforms/Delete/FieldValueIfEqualsOtherField.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Delete::FieldValueMatchingRegexp","Kiba/Extend/Transforms/Delete/FieldValueMatchingRegexp.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Delete::Fields","Kiba/Extend/Transforms/Delete/Fields.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Delete::FieldsExcept","Kiba/Extend/Transforms/Delete/FieldsExcept.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Explode::ColumnsRemappedInNewRows","Kiba/Extend/Transforms/Explode/ColumnsRemappedInNewRows.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Explode::FieldValuesToNewRows","Kiba/Extend/Transforms/Explode/FieldValuesToNewRows.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Explode::RowsFromMultivalField","Kiba/Extend/Transforms/Explode/RowsFromMultivalField.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::FilterRows::FieldEqualTo","Kiba/Extend/Transforms/FilterRows/FieldEqualTo.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::FilterRows::FieldMatchRegexp","Kiba/Extend/Transforms/FilterRows/FieldMatchRegexp.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::FilterRows::FieldPopulated","Kiba/Extend/Transforms/FilterRows/FieldPopulated.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::FilterRows::FieldValueGreaterThan","Kiba/Extend/Transforms/FilterRows/FieldValueGreaterThan.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Merge::CompareFieldsFlag","Kiba/Extend/Transforms/Merge/CompareFieldsFlag.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Merge::ConstantValue","Kiba/Extend/Transforms/Merge/ConstantValue.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Merge::ConstantValueConditional","Kiba/Extend/Transforms/Merge/ConstantValueConditional.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Merge::CountOfMatchingRows","Kiba/Extend/Transforms/Merge/CountOfMatchingRows.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Merge::MultiRowLookup","Kiba/Extend/Transforms/Merge/MultiRowLookup.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Merge::MultivalueConstant","Kiba/Extend/Transforms/Merge/MultivalueConstant.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::MsAccess::ScientificNotationToNumberString","Kiba/Extend/Transforms/MsAccess/ScientificNotationToNumberString.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Prepend::FieldToFieldValue","Kiba/Extend/Transforms/Prepend/FieldToFieldValue.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Prepend::ToFieldValue","Kiba/Extend/Transforms/Prepend/ToFieldValue.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Rename::Field","Kiba/Extend/Transforms/Rename/Field.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Replace::EmptyFieldValues","Kiba/Extend/Transforms/Replace/EmptyFieldValues.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Replace::FieldValueWithStaticMapping","Kiba/Extend/Transforms/Replace/FieldValueWithStaticMapping.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Reshape::CollapseMultipleFieldsToOneTypedFieldPair","Kiba/Extend/Transforms/Reshape/CollapseMultipleFieldsToOneTypedFieldPair.html#method-i-process","(row)",""],["process","Kiba::Extend::Transforms::Split::IntoMultipleColumns","Kiba/Extend/Transforms/Split/IntoMultipleColumns.html#method-i-process","(row)",""],["result","Kiba::Extend::Utils::Lookup::RowSelector","Kiba/Extend/Utils/Lookup/RowSelector.html#method-i-result","()",""],["value_ct","Kiba::Extend::Fieldset","Kiba/Extend/Fieldset.html#method-i-value_ct","()",""],["write","Kiba::Extend::Destinations::CSV","Kiba/Extend/Destinations/CSV.html#method-i-write","(row)",""],["Gemfile","","Gemfile.html","","<p>source “rubygems.org”\n<p>git_source(:github) {|repo_name| “github.com/#{repo_name}” } …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  kiba-extend (1.13.0)\n    activesupport\n    kiba (&gt;= 4.0.0)\n    kiba-common (&gt;= ...</pre>\n"],["LICENSE","","LICENSE_txt.html","","<p>The MIT License (MIT)\n<p>Copyright © 2020 Kristina Spurgin\n<p>Permission is hereby granted, free of charge, …\n"],["README","","README_md.html","","<p>Kiba::Extend\n<p>Kiba is a Data processing & ETL framework for Ruby.\n<p>kiba-extend is a suite of extensions useful …\n"],["Rakefile","","Rakefile.html","","<p>require “bundler/gem_tasks” require “rspec/core/rake_task”\n<p>RSpec::Core::RakeTask.new …\n"],["setup","","bin/setup.html","","<p>#!/usr/bin/env bash set -euo pipefail IFS=$&#39;nt&#39; set -vx\n<p>bundle install\n<p># Do any other automated …\n"],["test.csv","","tmp/test_csv.html","","<p>id,name 1,Weddy 2, 3,“”\n"]]}}